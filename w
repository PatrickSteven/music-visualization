import AbstractView from "./AbstractView.js";

export default class extends AbstractView {
    constructor(params) {
        super(params);
        this.setTitle("Music");
        this.endpoint = "api.taketones.com/v1/public/tracks/";
        this.musicSelectionData = {}
    }
   
    async createMusicSelection(){
        let result = await this.getMusicSelection();
        this.musicSelectionData = JSON.parse(result);
        console.log(this.musicSelectionData);

        const GenresSection = this.createSection(this.musicSelectionData.data.Genres);
        const MoodsSection = this.createSection(this.musicSelectionData.data.Moods);

        return `
            ${GenresSection}
            ${MoodsSection}
        `;
    }

    createSection(data){
        const textColor = "";
        const divContainerClass = "";
        const divCardClass = "";
        const divImageClass = "";
        
        const cardForEachMusicType = ""
        data.forEach(function(d){
            cardForEachMusicType.concat(
                `
                <div class="${divCardClass} ${textColor}">
                    <img src="${d.icon}" class="${divImageClass}">
                    <div class="card-img-overlay">
                        <h5 class="card-title">${d.name}</h5>
                    </div>
                </div>
                `  
            )
        })

        return  `
            <div class="${divContainerClass}">
                ${cardForEachMusicType}
            <div
        `;


    }

    create(){
       console.log(this.createMusicSelection()) 
    }


    getMusicSelection(){

        return new Promise(function (resolve, reject) {

            const url = "https://api.taketones.com/v1/public/tags?tag[]=genre&tag[]=mood&tag[]=type"
            const http = new XMLHttpRequest();
            http.open("GET", url);

            http.onload = function() {
                if (http.status != 200) { // analyze HTTP status of the response
                    reject({
                        status: this.status,
                        statusText: http.statusText
                    })
                } else { // show the result
                    resolve(http.response) 
                }
            };

            http.onerror = function() {
              console.log("Request failed");
            };

            http.send();
        });
    }



    async getHtml() {
        return`
        <h1> Select </h1>
        ${this.create()}
        `;
    }
}
